---
usage: >
  make a docker-compose for a geth network from a base.yml and a node.yml
  appropriate for the chosen consensus

args:
  configdir:
    usage: >
      The config root directory.
run:
  - task:
      name: configure
      options:
        required: >-
          composeproject
          etherbase
          geth_image
          maxnodes
          netrestrict
          networkid
          nodesdir
      args:
        - ${configdir}
  - command:
      exec: |
        set -e

        # read the config file fields into BBAKE_ vars.
        eval $(cd ${launchdir} && cd ${configdir} && python3 ${tuskdir}/benchjson.py shell-export bench.json)

        cd ${launchdir} && cd ${configdir}

        [ -z "$BBAKE_CONSENSUS_OPTS" ] && echo "BBAKE_CONSENSUS_OPTS not defined)" && exit 1

        export GAS_OPTS="${BBAKE_RECOMMIT:+ --miner.recommit "${BBAKE_RECOMMIT}"} --miner.gastarget ${BBAKE_GASTARGET} --miner.gaslimit ${BBAKE_GASLIMIT}"

        DISCOVERY_OPTS=--nodiscover
        if [ ${BBAKE_NUMBOOTNODES} -gt 0 ]; then
          BOOTNODE0_PUB=$(cat ${BBAKE_NODESDIR}/node0/enode)
          DISCOVERY_OPTS="--netrestrict=${BBAKE_NETRESTRICT} --bootnodes=enode://${BOOTNODE0_PUB}@node0:7200"
        fi

        cat <<END > .env
        COMPOSE_PROJECT_NAME=${BBAKE_NAME}
        CONSENSUS_OPTS=${BBAKE_CONSENSUS_OPTS}
        NETWORKID=${BBAKE_NETWORKID}
        NETRESTRICT=${BBAKE_NETRESTRICT}
        DISCOVERY_OPTS=${DISCOVERY_OPTS}
        ${BOOTNODE0_PUB:+BOOTNODE0_PUB=${BOOTNODE0_PUB}}
        ETHERBASE=${BBAKE_ETHERBASE}
        QUORUM_SRC=${BBAKE_QUORUM_SRC}
        NODESDIR=${BBAKE_NODESDIR}
        GETH_IMAGE= ${BBAKE_GETH_IMAGE}
        DELVE_IMAGE=${BBAKE_DELVE_IMAGE}
        GAS_OPTS=${GAS_OPTS}
        END
        cat .env
        echo "Wrote .env"


        # Merge in the appropriate number of copies of node.yml to the
        # docker-compose.yml we are generating. As we do that add the
        # numeric suffices to each nodes service entry and the working_dir
        # it uses
        cp ${tuskdir}/compose/${BBAKE_CONSENSUS}/base.yml .
        cp ${tuskdir}/compose/${BBAKE_CONSENSUS}/node.yml .
        cp base.yml docker-compose.yml

        # each document fragment has to be valid. so they all need the
        # x-node-defaults anchor to be defined.
        cat <<END > tmp.yml
        x-node-defaults:
          &node-defaults
        END

        PORT=8300
        for i in $(seq 0 $((${BBAKE_MAXNODES} - 1)))
        do
            VAL=$i EXPOSED="\"${PORT}:\"" yq eval '
              .node |= .working_dir += env(VAL) |
              del(.x-node-defaults) |
              .node.ports[0] |= . = env(EXPOSED) + . |
              with_entries(.key |= .  + env(VAL))
            ' node.yml
            PORT=$((PORT + 1))
        done >> tmp.yml
        yq eval-all --inplace '
            select(fileIndex == 0) * {"services": select(fileIndex == 1)}
            | del(.services.x-node-defaults)' docker-compose.yml tmp.yml
        echo "Wrote docker-compose.yml"
