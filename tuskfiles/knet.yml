usage: |
  Use the geth node admin package to introspect the peer connections

options:
  peers:
    usage: "list connected peer ids for each node as well as count"
    short: "p"
    type: bool

args:
  configdir:
    usage: >
      The config root directory.

run:
  - task:
      name: configure
      args:
        - ${configdir}
  - command:
      exec: |
        set -e
        TUSKDIR=$(pwd)

        # read the config file fields into BBAKE_ vars.
        eval $(cd ${launchdir} && cd ${configdir} && python3 ${tuskdir}/benchjson.py shell-export bench.json)

        cd ${launchdir} && cd ${configdir}

        for i in $(seq 0 $((${BBAKE_MAXNODES} - 1)))
        do

        POD=ethnode${i}-0
        export POD

        export ADMIN_JSON=$(kubectl \
           -n ${BBAKE_NAME} exec ${POD} -- \
            /usr/local/bin/geth \
            attach /data/node/geth.ipc \
             --exec "console.log(JSON.stringify(admin))")

        cat <<PYEND | python3
        import os
        import json
        pod = os.environ['POD']
        s = os.environ['ADMIN_JSON'].rsplit(None, 1)[0]
        j = json.loads(s)
        peerips = [p["network"]["remoteAddress"].rsplit(":", 1)[0] for p in j["peers"]]
        peerids = [p["id"][-40:] for p in j["peers"]]
        if "${peers}" == "true":
          print(f'{pod} {j["nodeInfo"]["id"][-40:]} {j["nodeInfo"]["ip"]} -> [{len(peerids)}] {", ".join(peerids)}')
        else:
          print(f'{pod} {j["nodeInfo"]["id"][-40:]} {j["nodeInfo"]["ip"]} -> [{len(peerids)}]')
        PYEND
        done
