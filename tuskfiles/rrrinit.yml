---
usage: "rrrinit - run geth init in the rrr node directories"
options:
  sudo:
    usage: "some systems will require sudo to delete the node data directory"
    type: bool
args:
  configdir:
    usage: >
      The config root directory.
run:
  - task:
      name: configure
      args:
        - ${configdir}
  - command:
      exec: |
        set -e

        TUSKDIR=$(pwd)

        # read the config file fields into BBAKE_ vars.
        CONFIGVARS="${configvars}"
        eval ${READ_CONFIG}
        if ${configshow}; then eval ${SHOW_CONFIG}; exit 0; fi
        cd ${launchdir} && cd ${configdir}

        CONFIGDIR=$(pwd)

        cp ${TUSKDIR}/compose/rrr/genesis-in.json .

        GENESIS_JSON=${BBAKE_NODESDIR}/genesis.json

        pushd ${launchdir} # restore launchdir before recursive invoke
          tusk -qf ${thistusk} rrrextra ${configdir}
          tusk -qf ${thistusk} gethgendoc ${configdir} | tee ${GENESIS_JSON}
        popd

        echo "Wrote: ${GENESIS_JSON}"
        if ${BBAKE_K8S}; then
          echo "configured for k8s (geth init happens on deploy)"
          exit 0
        fi
        # clear out all the data dirs first to avoid mixed state if we fail
        # half way through
        ${sudo} && dosudo="sudo" || dosudo=""

        end=$((BBAKE_MAXNODES - 1))
        for i in $(seq 0 ${end}); do
          ${dosudo} rm -rf ${BBAKE_NODESDIR}/node$i/data
        done

        GETH_RRR_CMD="docker run --rm -u $(id -u):$(id -g) -v ${BBAKE_NODESDIR}:${BBAKE_NODESDIR} ${BBAKE_GETH_IMAGE} --nousb"
        [ -n "${BBAKE_GETH_RRR_BIN}" ] && GETH_RRR_CMD="${BBAKE_GETH_RRR_BIN} --nousb"

        for i in $(seq 0 ${end}); do
          ${GETH_RRR_CMD} \
              --datadir=${BBAKE_NODESDIR}/node${i}/data  \
              --nodekey ${BBAKE_NODESDIR}/node${i}/key \
              init ${BBAKE_NODESDIR}/genesis.json
        done

